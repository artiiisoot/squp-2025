{"version":3,"file":"static/js/533.e374ac2c.chunk.js","mappings":"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","sources":["components/common/Input.jsx","pages/ApiTest.jsx"],"sourcesContent":["import React from \"react\";\n\nimport Icon from \"./Icon\";\n\nconst Input = ({\n  rowLabel,\n  colLabel,\n  labelRequired,\n  borderType = \"line\",\n  name,\n  iconName,\n  type = \"text\",\n  value,\n  onChange,\n  onKeyDown,\n  placeholder = \"\",\n  required = false,\n  disabled = false,\n  autoFocus = false,\n  className = \"\",\n\n  onClickIcon,\n  timer,\n  isExpire,\n  errorMsg,\n  successMsg,\n  infoMsg,\n}) => {\n  return (\n    <div id=\"Input\" className={`${rowLabel && \"with-text-lebel\"}`}>\n      {rowLabel && (\n        <p className=\"text-label\">\n          {rowLabel}\n          {labelRequired && <i className=\"required\">*</i>}\n        </p>\n      )}\n\n      <div className=\"input-item\">\n        {colLabel && (\n          <div className=\"input-label\">\n            <p>{colLabel}</p>\n            {labelRequired && <i className=\"required\">*</i>}\n          </div>\n        )}\n\n        <div className={`input ${borderType} ${disabled ? \"disabled\" : \"\"}`}>\n          <input\n            id={name}\n            name={name}\n            type={type}\n            value={value}\n            onChange={onChange}\n            placeholder={placeholder}\n            required={required}\n            disabled={disabled}\n            autoFocus={autoFocus}\n            onKeyDown={onKeyDown}\n          />\n          {iconName && (\n            <Icon\n              icon={iconName}\n              size={\"1.5rem\"}\n              style={{ cursor: \"pointer\" }}\n              onClick={onClickIcon}\n            />\n          )}\n          {timer && (\n            <span className={`timer ${isExpire ? \"expire\" : \"run\"}`}>\n              00:00\n            </span>\n          )}\n\n          <span className={`border ${errorMsg || isExpire ? \"error\" : \"\"}`} />\n        </div>\n\n        {/* 에러메세지 */}\n        {errorMsg && <span className=\"error-msg\">{errorMsg}</span>}\n        {/* 성공메세지 */}\n        {successMsg && <span className=\"success-msg\">{successMsg}</span>}\n\n        {!errorMsg && infoMsg && (\n          <span className=\"info-msg\">\n            <Icon\n              icon={\"info\"}\n              size={\"0.875rem\"}\n              style={{ cursor: \"pointer\" }}\n            />{\" \"}\n            {infoMsg}\n          </span>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Input;\n","import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getData, login, logout, reserve } from \"@/api/apiActions\";\n\nimport Button from \"@/components/common/Button\";\nimport Input from \"@/components/common/Input\";\nimport { setLogin } from \"@/reducers/authSlice\";\nimport { callApi } from \"@/api/callApi\";\n\nconst ApiTest = () => {\n  const dispatch = useDispatch();\n\n  const { data, res } = useSelector((state) => state.data);\n\n  const [loginFields, setLoginFields] = useState({\n    id: \"admin\",\n    pw: \"password\",\n  });\n\n  const [filters, setFilters] = useState({\n    ra_column: \"\",\n    search_text: \"\",\n    s_date: \"\",\n    e_date: \"\",\n    ra_sort: \"desc\",\n  });\n\n  const [result, setResult] = useState(\"\");\n  const [total, setTotal] = useState(0);\n  const [page, setPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(1);\n  // const [data, setData] = useState([]);\n\n  const [reserveFields, setReserveFields] = useState({\n    name: \"\",\n    phone: \"\",\n    email: \"\",\n    company: \"\",\n    year: 2025\n  });\n\n  const [errorMessage, setErrorMessage] = useState(\"\");\n\n  const handleGetData = () => {\n    dispatch(getData());\n  };\n\n  const handleLogin = () => {\n    dispatch(login());\n  };\n\n  const handleLogout = () => {\n    dispatch(logout());\n  };\n\n  const handleResevation = () => {\n    dispatch(reserve(reserveFields));\n  };\n\n  const handleChangeLoginFields = (e) => {\n    setLoginFields({ ...loginFields, [e.target.name]: e.target.value });\n  };\n\n  const handleChangeReserveFields = (e) => {\n    setReserveFields({ ...reserveFields, [e.target.name]: e.target.value });\n    // console.log(\"e.target.name\", e.target.value);\n  };\n\n  const SECRET_KEY = process.env.REACT_APP_API_KEY;\n  const PER_PAGE = 2;\n\n  const handleChange = (e) => {\n    const { id, value } = e.target;\n    setFilters((prev) => ({ ...prev, [id]: value }));\n  };\n\n  const fetchData = async (targetPage = 1) => {\n    const payload = {\n      ...filters,\n      page: targetPage,\n      perPage: PER_PAGE,\n    };\n\n    // const response = await callApi({\n    //   endpoint: \"/member_list\",\n    //   method: \"POST\",\n    //   body: payload,\n    //   useHash: true,\n    // });\n\n    // if (response?.data) {\n    //   setData(response.data);\n    //   setResult(\n    //     `쿼리: ${response.query}\\n\\n데이터:\\n${JSON.stringify(\n    //       response.data,\n    //       null,\n    //       2\n    //     )}`\n    //   );\n    //   setTotal(response.total);\n    //   setPage(response.page);\n    //   setTotalPages(Math.ceil(response.total / response.per_page));\n    // } else {\n    //   setResult(\"데이터를 불러오는 중 오류 발생.\");\n    //   setData([]);\n    // }\n\n    dispatch(getData(payload));\n  };\n\n  const handleSearch = () => {\n    setPage(1);\n    fetchData(1);\n  };\n\n  const renderPagination = () => {\n    const buttons = [];\n\n    const makeBtn = (label, disabled, targetPage) => (\n      <button\n        key={label}\n        disabled={disabled}\n        onClick={() => fetchData(targetPage)}\n        style={{ marginRight: 4 }}\n      >\n        {label}\n      </button>\n    );\n\n    buttons.push(makeBtn(\"맨처음\", page === 1, 1));\n    buttons.push(makeBtn(\"이전\", page === 1, page - 1));\n    for (let i = 1; i <= totalPages; i++) {\n      buttons.push(makeBtn(i, i === page, i));\n    }\n    buttons.push(makeBtn(\"다음\", page === totalPages, page + 1));\n    buttons.push(makeBtn(\"맨끝\", page === totalPages, totalPages));\n\n    return buttons;\n  };\n\n  // useEffect(()=> {\n  //   console.log(\"result\", result);\n\n  // })\n\n  return (\n    <article id=\"ApiTest\">\n      {/* <div className=\"container\">\n        <h5>기본 API 호출</h5>\n\n        <Button\n          title={\"API 데이터 가져오기\"}\n          btnSize={\"lg\"}\n          btnColor={\"primary\"}\n          onClick={() => handleGetData()}\n        />\n\n        <pre>{JSON.stringify(data, null, 2)}</pre>\n      </div> */}\n\n      <pre>\n        {res}\n      </pre>\n\n      <div>\n        <h2>기본 API 호출</h2>\n        <select\n          id=\"ra_column\"\n          value={filters.ra_column}\n          onChange={handleChange}\n        >\n          <option value=\"\">전체</option>\n          <option value=\"ra_name\">이름</option>\n          <option value=\"ra_phone\">전화번호</option>\n          <option value=\"ra_email\">이메일</option>\n          <option value=\"ra_company\">회사</option>\n        </select>\n        <input\n          id=\"search_text\"\n          type=\"text\"\n          value={filters.search_text}\n          placeholder=\"검색어 입력\"\n          onChange={handleChange}\n        />\n        <br />\n        <input\n          id=\"s_date\"\n          type=\"date\"\n          value={filters.s_date}\n          onChange={handleChange}\n        />{\" \"}\n        ~{\" \"}\n        <input\n          id=\"e_date\"\n          type=\"date\"\n          value={filters.e_date}\n          onChange={handleChange}\n        />\n        <br />\n        <select id=\"ra_sort\" value={filters.ra_sort} onChange={handleChange}>\n          <option value=\"desc\">최신순</option>\n          <option value=\"asc\">오래된순</option>\n        </select>\n        <br />\n        <button onClick={handleSearch}>API 데이터 가져오기</button>\n        <pre style={{ background: \"#f0f0f0\", padding: \"10px\" }}>{result}</pre>\n        <div style={{ marginTop: \"10px\" }}>{renderPagination()}</div>\n        <div style={{ margin: \"8px 0\" }}>총 {total}건</div>\n      </div>\n\n      <div className=\"container\">\n        <h5>로그인</h5>\n\n        <div className=\"input-group\">\n          <Input\n            id=\"id\"\n            name=\"id\"\n            textLabel=\"아이디\"\n            value={loginFields.id}\n            onChange={handleChangeLoginFields}\n            required\n          />\n          <Input\n            inputType=\"password\"\n            id=\"password\"\n            name=\"password\"\n            textLabel=\"패스워드\"\n            value={loginFields.pw}\n            onChange={handleChangeLoginFields}\n            required\n          />\n        </div>\n\n        <Button\n          title={\"로그인\"}\n          btnSize={\"lg\"}\n          btnColor={\"primary\"}\n          onClick={() => handleLogin()}\n        />\n        <Button\n          title={\"로그아웃\"}\n          btnSize={\"lg\"}\n          btnColor={\"primary\"}\n          onClick={() => handleLogout()}\n        />\n\n        <div className=\"test-box\">\n          {/* <pre>\n            {JSON.stringify(currentType === \"login\" && result, null, 2)}\n          </pre> */}\n        </div>\n      </div>\n\n      <div className=\"container\">\n        <div className=\"input-group\">\n          <Input\n            id=\"name\"\n            name=\"name\"\n            rowLabel=\"이름\"\n            value={reserveFields.name}\n            onChange={handleChangeReserveFields}\n            required\n          />\n\n          <Input\n            id=\"phone\"\n            name=\"phone\"\n            rowLabel=\"휴대폰번호\"\n            value={reserveFields.phone}\n            onChange={handleChangeReserveFields}\n            required\n          />\n\n          <Input\n            id=\"email\"\n            name=\"email\"\n            rowLabel=\"이메일\"\n            value={reserveFields.email}\n            onChange={handleChangeReserveFields}\n            required\n          />\n\n          <Input\n            id=\"company\"\n            name=\"company\"\n            rowLabel=\"회사명\"\n            value={reserveFields.company}\n            onChange={handleChangeReserveFields}\n            required\n          />\n\n          {errorMessage && <span className=\"error-msg\">{errorMessage}</span>}\n        </div>\n\n        <Button\n          title={\"사전예약하기\"}\n          btnSize={\"lg\"}\n          btnColor={\"primary\"}\n          onClick={() => handleResevation()}\n        />\n\n        <div className=\"test-box\">\n          {/* <pre>\n            {JSON.stringify(currentType === \"reserve\" && result, null, 2)}\n          </pre> */}\n        </div>\n      </div>\n    </article>\n  );\n};\n\nexport default ApiTest;\n"],"names":["_ref","rowLabel","colLabel","labelRequired","borderType","name","iconName","type","value","onChange","onKeyDown","placeholder","required","disabled","autoFocus","className","onClickIcon","timer","isExpire","errorMsg","successMsg","infoMsg","_jsxs","id","children","_jsx","Icon","icon","size","style","cursor","onClick","ApiTest","dispatch","useDispatch","data","res","useSelector","state","loginFields","setLoginFields","useState","pw","filters","setFilters","ra_column","search_text","s_date","e_date","ra_sort","result","setResult","total","setTotal","page","setPage","totalPages","setTotalPages","reserveFields","setReserveFields","phone","email","company","year","errorMessage","setErrorMessage","handleChangeLoginFields","e","target","handleChangeReserveFields","handleChange","prev","fetchData","async","targetPage","arguments","length","undefined","payload","perPage","getData","handleSearch","background","padding","marginTop","renderPagination","buttons","makeBtn","label","marginRight","push","i","margin","Input","textLabel","inputType","Button","title","btnSize","btnColor","login","logout","reserve"],"sourceRoot":""}